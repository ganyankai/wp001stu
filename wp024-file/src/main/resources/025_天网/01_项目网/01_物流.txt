001 物流
	05 

	04 推送 o 
		
	03 平台计价
		03 比价网
			03 
			   						
			02 比价网代码git获取
				http://ganyankai@120.25.212.63:10101/r/priceCompare.git 

			01 参考
				http://192.168.0.107:8080/back/
				admin 123456
			
		02 数据模型
			02 结论
				公里计价法竟然也是个列表展示

			01 公里计价法
				{
					"token": "token_adabbca8-1a7d-414f-9eba-1fc5d549f52c",
					"device": "device_cp",
					"params": {
								"carType": 4,
								"categoryId": 12,
								"params": [
									{
										"id": 269,
										"categoryId": 12,
										"carType": "4",
										"nuclearLoad": 15,
										"distMin": 0,
										"distMax": 20,
										"price": 700,
										"priceUnit": null,
										"createBy": 1,
										"createDate": null,
										"updateBy": 1,
										"updateDate": "2019-08-31 14:32:23"
									},
									{
										"id": 270,
										"categoryId": 12,
										"carType": "4",
										"nuclearLoad": 15,
										"distMin": 21,
										"distMax": 60,
										"price": 4,
										"priceUnit": null,
										"createBy": 1,
										"createDate": null,
										"updateBy": 1,
										"updateDate": "2019-08-31 14:32:23"
									},
									{
										"id": 271,
										"categoryId": 12,
										"carType": "4",
										"nuclearLoad": 15,
										"distMin": 61,
										"distMax": 120,
										"price": 3,
										"priceUnit": null,
										"createBy": 1,
										"createDate": null,
										"updateBy": 1,
										"updateDate": "2019-08-31 14:32:23"
									},
									{
										"id": 272,
										"categoryId": 12,
										"carType": "4",
										"nuclearLoad": 15,
										"distMin": 121,
										"distMax": 200,
										"price": 2,
										"priceUnit": null,
										"createBy": 1,
										"createDate": null,
										"updateBy": 1,
										"updateDate": "2019-08-31 14:32:23"
									},
									{
										"id": 273,
										"categoryId": 12,
										"carType": "4",
										"nuclearLoad": 15,
										"distMin": 201,
										"distMax": 800,
										"price": 1,
										"priceUnit": null,
										"createBy": 1,
										"createDate": null,
										"updateBy": 1,
										"updateDate": "2019-08-31 14:32:23"
									},
									{
										"carType": 4,
										"categoryId": 12,
										"distMax": 899,
										"distMin": 801,
										"id": null,
										"price": 1.24,
										"nuclearLoad": 15
									}
								],
								"updateBy": "1",
								"createBy": "1"
							}
						}

			
		01 因素
			
			04 价格单位(元/吨/公里)

			03 运距

			02 车型
				^
				|
			01 介质

	02 匹配
		
		02 获取车辆所属车主
		
		01 获取车辆目的地
				
	01 车辆
		04 位置
			前端每10分钟向后台发送车辆的位置信息
			
		03 车主
			01 匹配货源
				

				02 匹配算法
					04 设计因数之间的交叉
						哪些因素交叉后结果为0,哪些因素交叉结果为1
						
					03 设计匹配是需要传入的参数
						货源id(单个或集合)	车主id
				
					02 设计匹配因素
						路线	介质	 重量等等

					01 设计为开闭原则
						0 不推送   1 推送	
					
				01 匹配规则				
				路线	介质	
				
				取得车主(根据车主对应的客户id)的常用路线 -> 寻找出发省市和车主当前目的地相同的货源和介质 -> 将货源id存入消息推送表
					
		02 关联
			车辆-> 运单项->运单-> 货源 ->最后一个目的地 
			
		01 状态 o 
			05 运单取消 o
				
			04 运单运输完成	
				01 -货主确认收货后运输完成?	o

			03 删除运单项	o
				

			02 修改运单项	o
				

			01 添加运单项	o
				

			
	